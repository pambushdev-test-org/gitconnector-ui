version: 2.1
jobs:
  run_tests:
      docker:
        - image: circleci/node:12
      steps:
        - checkout
        - run:
            name: Install npm dependencies
            command: |
              npm install --save
        - run:
            name: Run Unit Tests
            command: |
              ./node_modules/mocha/bin/mocha test/ --reporter mochawesome --reporter-options reportDir=test-results,reportFilename=test-results
        - store_test_results:
            path: test-results

  build_docker_image:
      docker:
        - image: circleci/node:12
      steps:
        - checkout
        - setup_remote_docker:
            docker_layer_caching: false
        - run:
            name: Build Docker image
            command: |
              export TAG=0.0.3.<< pipeline.number >>
              export IMAGE_NAME=$CIRCLECI_PROJECT_REPONAME
              docker build -t $DOCKER_LOGIN/$IMAGE_NAME:$TAG .
              echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
              echo "Docker loggin successful, end docker image test."

  gke_create_cluster:
      docker:
        - image: pambushdev/alpine-gcloud-terraform:latest
      environment:
        CLOUDSDK_CORE_PROJECT: gcp-test-project-328901
      steps:
        - checkout
        - run:
            name: Create GKE Cluster
            command: |
              echo $TF_CLOUD_TOKEN | base64 -d > $HOME/.terraformrc
              echo $GOOGLE_CLOUD_KEYS | base64 -d > $HOME/.gcloud_keys.json
              gcloud auth activate-service-account --key-file ${HOME}/.gcloud_keys.json
              cd .terraform/cluster
              terraform init
              terraform plan -var credentials_file=$HOME/.gcloud_keys.json -out=plan.txt
              echo "gke cluster test successful."

  gke_deploy_app:
    docker:
      - image: pambushdev/alpine-gcloud-terraform:latest
    environment:
      CLOUDSDK_CORE_PROJECT: gcp-test-project-328901
    steps:
      - checkout
      - run:
          name: Deploy App to GKE
          command: |
            export CLUSTER_NAME="cicd-gitconnector-ui"
            export TAG=0.0.3.<< pipeline.number >>
            export DOCKER_IMAGE="docker-image=${DOCKER_LOGIN}/${CIRCLECI_PROJECT_REPONAME}:$TAG"
            echo $TF_CLOUD_TOKEN | base64 -d > $HOME/.terraformrc
            echo $GOOGLE_CLOUD_KEYS | base64 -d > $HOME/.gcloud_keys.json
            gcloud auth activate-service-account --key-file ${HOME}/.gcloud_keys.json
            gcloud container clusters get-credentials $CLUSTER_NAME --zone="us-west1-a"
            cd .terraform/kubernetes-app
            terraform init
            terraform plan -var $DOCKER_IMAGE -out=plan.txt
            echo "gke deploy app test successful"
            
            mkdir -p /tmp/gke/ && echo 'export ENDPOINT='${ENDPOINT} > /tmp/gke/gke-endpoint
      - persist_to_workspace:
          root: /tmp/gke
          paths:
            - "*"

  gke_destroy_cluster:
    docker:
      - image: pambushdev/alpine-gcloud-terraform:latest
    environment:
      CLOUDSDK_CORE_PROJECT: gcp-test-project-328901
    steps:
      - checkout
      - run:
          name: Destroy GKE Cluster
          command: |
            export CLUSTER_NAME="cicd-gitconnector-ui"
            export TAG=0.0.3.<< pipeline.number >>
            export DOCKER_IMAGE="docker-image=${DOCKER_LOGIN}/${CIRCLECI_PROJECT_REPONAME}:$TAG"
            echo $TF_CLOUD_TOKEN | base64 -d > $HOME/.terraformrc
            echo $GOOGLE_CLOUD_KEYS | base64 -d > $HOME/.gcloud_keys.json
            gcloud auth activate-service-account --key-file ${HOME}/.gcloud_keys.json
            cd .terraform/kubernetes-app
            terraform init
            gcloud container clusters get-credentials $CLUSTER_NAME --zone="us-west1-a"            
            
            cd ../.terraform/cluster
            echo "destroy gke cluster test successful"
            

workflows:
  build_test:
    jobs:
      - run_tests
      - build_docker_image
      - gke_create_cluster
      - gke_deploy_app:
          requires:
            - run_tests
            - build_docker_image
            - gke_create_cluster
      - approve-destroy:
          type: approval
          requires:
            - gke_create_cluster
            - gke_deploy_app
      - gke_destroy_cluster:
          requires:
            - approve-destroy